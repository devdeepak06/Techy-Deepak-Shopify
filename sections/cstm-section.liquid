{% # if request.design_mode %}
{% # This will only render in the theme editor %}
{%
  # ##############################
  # This is a comment
  # across multiple lines
  ###############################
%}
{% # endif %}
{% comment %}
    <div class="section-heading">
      {% liquid
        echo section.settings.title
      %}
    </div>
    <div class="images">
      {% for block in section.blocks reversed %}
        <div class="image first-{{ forloop.first }} last-{{ forloop.last }} oneBased-index-{{ forloop.index }} zeroBased-index-{{ forloop.index0 }} totalLength-{{ forloop.length }} parentLoop-{{ forloop.parentloop }} one-rindex-{{ forloop.rindex }} zero-rindex-zero-{{ forloop.rindex0 }}">
          <img
            class="slideshow-image"
            src="{{ block.settings.image | image_url }}"
            width=""
            height=""
            alt="image"
            {{ block.shopify_attributes }}
          >
        </div>
      {% endfor %}
    </div>


          {% form 'activate_customer_password' %}
          {{ form.errors | default_errors }}

          <div class="password">
            <label for="password">Password</label>
            <input type="password" name="customer[password]">
          </div>

          <div class="password_confirm">
            <label for="password_confirmation">Password Confirmation</label>
            <input type="password" name="customer[password_confirmation]">
          </div>

          <div class="submit">
            <input type="submit" value="Activate account">
            <span>or</span>
            <input type="submit" name="decline" value="Decline invitation">
          </div>
        {% endform %}

      <div class="images">
        {% for block in section.blocks %}
          <div class="image">
            <img
              class="slideshow-image"
              src="{{ block.settings.image | image_url }}"
              width=""
              height=""
              alt="image"
              {{ block.shopify_attributes }}
            >
          </div>
        {% endfor %}
      </div>
  {% style %}
    .section-heading{
      text-align: center;
      font-weight: bold;
      font-size: 24px;
      margin-bottom: 10px;
      color: red;
    }
    .slideshow{
      width: 100%;
    }
     .images{
      display: flex;
      width: 100%;
    }
    .image{
      width: 33%;
      height: 20%;
    }
    .image img{
      width: 100%;
      height: 100%;
      object-fit: cover;
      margin: 0 auto;
    }
  {% endstyle %}
{% endcomment %}
<style>
  .blog-list{
    display: flex;
    gap: 20px;
  }
</style>
{{ blogs }}
Blog title-
<div class="myblogs">
  <ul id="blog-list"></ul>
</div>

<div class="blog_nav_list"></div>

{% schema %}
{
  "name": "Slideshow",
  "tag": "section",
  "class": "slideshow",
  "max_blocks": 5,
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Slideshow",
      "default": "Slideshow"
    },
  {
    "type": "header",
    "content": "sslld",
    "info": "Header for the custom section"
  },
    {
      "type": "paragraph",
      "content": "Paragraph for the custom section"
    }
  ],
  "blocks": [
     {
       "name": "Slide",
       "type": "slide",
       "settings": [
         {
           "type": "image_picker",
           "id": "image",
           "label": "Image"
         }
       ]
     }
   ],
  "presets": [
    {
      "name": "Slideshow",
      "settings": {
        "title": "Slideshow"
      },
      "blocks": [
        {
          "type": "slide"
        },
        {
          "type": "slide"
        }
      ]
    }
  ]
}
{% endschema %}

<script>
 document.addEventListener("DOMContentLoaded", function () {
  async function fetchBlogs() {
    try {
      const response = await fetch('https://techydeepak.myshopify.com/admin/api/2024-10/blogs.json', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'X-Shopify-Access-Token': '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',
        },
      });
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const data = await response.json();
      const blogList = document.querySelector('#blog-list');
        console.log(data);
      
      data.blogs.forEach((blog) => {
        const listItem = document.createElement('li');
        const link = document.createElement('a');
        link.href = `blogs/${blog.handle}`;
        link.textContent = blog.title;
        listItem.appendChild(link);
        blogList.appendChild(listItem);


        const blog_nav_list = document.querySelector('.blog_nav_list');
        const blogLink = `blogs/${blog.handle}`;
        const blogHandle = blog.handle;
        const blogItem = document.createElement('span');
        blogItem.classList.add('blog_nav_item');
        blogItem.setAttribute("data-handle", blog.handle);
        blogItem.setAttribute("data-url", blogLink);
        blogItem.textContent = blog.title;
        blog_nav_list.appendChild(blogItem);
      });
    } catch (error) {
      console.error('Error fetching blogs:', error);
    }
  }
  fetchBlogs();
   
  setTimeout(()=>{
    
    const blogNavList = document.querySelectorAll('.slideshow .blog_nav_list .blog_nav_item');
  if (blogNavList.length > 0) {
    blogNavList[0].classList.add('active');
    console.log('Active class added to:', blogNavList[0]); 
  }
    
  }, 1000)  
});
</script>
