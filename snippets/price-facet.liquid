<style>
    /* Styles for the price input container */
    .price-input-container {
        width: 100%;
    }

    .price-input .price-field {
        display: flex;
        margin-bottom: 22px;
    }

    .price-field span {
        margin-right: 10px;
        margin-top: 6px;
        font-size: 17px;
    }

    .price-field input {
        flex: 1;
        height: 35px;
        font-size: 15px;
        font-family: "DM Sans", sans-serif;
        border-radius: 9px;
        text-align: center;
        border: 0px;
        background: #e4e4e4;
    }

    .price-input {
        width: 100%;
        font-size: 19px;
        color: #555;
    }

    /* Remove Arrows/Spinners */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    .slider-container {
        width: 100%;
    }

    .slider-container {
        height: 6px;
        position: relative;
        background: #e4e4e4;
        border-radius: 5px;
    }

    .slider-container .price-slider {
        height: 100%;
        left: 25%;
        right: 15%;
        position: absolute;
        border-radius: 5px;
        background: #01940b;
    }

    .range-input {
        position: relative;
    }

    .range-input input {
        position: absolute;
        width: 100%;
        height: 5px;
        background: none;
        top: -5px;
        pointer-events: none;
        cursor: pointer;
        -webkit-appearance: none;
    }

    /* Styles for the range thumb in WebKit browsers */
    input[type="range"]::-webkit-slider-thumb {
        height: 18px;
        width: 18px;
        border-radius: 70%;
        background: #555;
        pointer-events: auto;
        -webkit-appearance: none;
    }

    @media screen and (max-width: 768px) {
        .price-input {
            flex-direction: column;
            align-items: center;
        }

        .price-field {
            margin-bottom: 10px;
        }
    }
    .custom-wrapper {
      position: relative;
  }
</style>
<div class="custom-wrapper">
  <div class="price-input-container">
    <div class="price-input">
      <div class="price-field">
        <input
          type="number"
          class="min-input"
          value="2500"
        >
      </div>
      <div class="price-field">
        <input
          type="number"
          class="max-input"
          value="8500"
        >
      </div>
    </div>
    <div class="slider-container">
      <div class="price-slider"></div>
    </div>
  </div>
  <div class="range-input">
    <input
      type="range"
      class="min-range"
      min="0"
      max="10000"
      value="2500"
      step="1"
    >
    <input
      type="range"
      class="max-range"
      min="0"
      max="10000"
      value="8500"
      step="1"
    >
  </div>
</div>
<script>
document.addEventListener('DOMContentLoaded', () => {
    const rangeSlider = document.querySelector(".slider-container .price-slider");
    const [minRangeInput, maxRangeInput] = document.querySelectorAll(".range-input input");
    const [minPriceInput, maxPriceInput] = document.querySelectorAll(".price-input input");
    
    const priceGap = 500;

    const updateRangeStyle = () => {
        const maxRangeValue = maxRangeInput.max;
        const minRangeValue = minRangeInput.max;
        rangeSlider.style.left = `${(minRangeInput.value / minRangeValue) * 100}%`;
        rangeSlider.style.right = `${100 - (maxRangeInput.value / maxRangeValue) * 100}%`;
    };

    const handlePriceInput = (e) => {
        let [minPrice, maxPrice] = [parseInt(minPriceInput.value), parseInt(maxPriceInput.value)];

        if (minPrice < 0) {
            alert("Minimum price cannot be less than 0");
            minPriceInput.value = 0;
            minPrice = 0;
        }
        if (maxPrice > 10000) {
            alert("Maximum price cannot be greater than 10000");
            maxPriceInput.value = 10000;
            maxPrice = 10000;
        }

        if (minPrice > maxPrice - priceGap) {
            minPrice = Math.max(0, maxPrice - priceGap);
            minPriceInput.value = minPrice;
        }

        if (maxPrice <= maxRangeInput.max && (maxPrice - minPrice) >= priceGap) {
            if (e.target.classList.contains("min-input")) {
                minRangeInput.value = minPrice;
            } else {
                maxRangeInput.value = maxPrice;
            }
            updateRangeStyle();
        }
    };

    const handleRangeInput = (e) => {
        let [minRangeVal, maxRangeVal] = [parseInt(minRangeInput.value), parseInt(maxRangeInput.value)];

        if ((maxRangeVal - minRangeVal) < priceGap) {
            if (e.target.classList.contains("min-range")) {
                minRangeInput.value = maxRangeVal - priceGap;
            } else {
                maxRangeInput.value = minRangeVal + priceGap;
            }
        } else {
            minPriceInput.value = minRangeVal;
            maxPriceInput.value = maxRangeVal;
            updateRangeStyle();
        }
    };

    // Event listeners for price input changes
    minPriceInput.addEventListener("input", handlePriceInput);
    maxPriceInput.addEventListener("input", handlePriceInput);

    // Event listeners for range slider changes
    minRangeInput.addEventListener("input", handleRangeInput);
    maxRangeInput.addEventListener("input", handleRangeInput);
});
</script>
