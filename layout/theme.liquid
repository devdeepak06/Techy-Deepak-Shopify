<!doctype html>
<html class="js" lang="{{ request.locale.iso_code }}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="">
    <link rel="canonical" href="{{ canonical_url }}">

    {%- if settings.favicon != blank -%}
      <link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 32, height: 32 }}">
    {%- endif -%}

    {%- unless settings.type_header_font.system? and settings.type_body_font.system? -%}
      <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
    {%- endunless -%}

    <title>
      {{ page_title }}
      {%- if current_tags %} &ndash; tagged "{{ current_tags | join: ', ' }}"{% endif -%}
      {%- if current_page != 1 %} &ndash; Page {{ current_page }}{% endif -%}
      {%- unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless -%}
    </title>

    {% if page_description %}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}

    {% render 'meta-tags' %}
    <script src="{{ 'constants.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'pubsub.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'global.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'details-disclosure.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'details-modal.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'search-form.js' | asset_url }}" defer="defer"></script>

    {%- if settings.animations_reveal_on_scroll -%}
      <script src="{{ 'animations.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    {{ content_for_header }}

    {%- liquid
      assign body_font_bold = settings.type_body_font | font_modify: 'weight', 'bold'
      assign body_font_italic = settings.type_body_font | font_modify: 'style', 'italic'
      assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'
    %}

    {% style %}
                              {{ settings.type_body_font | font_face: font_display: 'swap' }}
                              {{ body_font_bold | font_face: font_display: 'swap' }}
                              {{ body_font_italic | font_face: font_display: 'swap' }}
                              {{ body_font_bold_italic | font_face: font_display: 'swap' }}
                              {{ settings.type_header_font | font_face: font_display: 'swap' }}

                              {% for scheme in settings.color_schemes -%}
                                {% assign scheme_classes = scheme_classes | append: ', .color-' | append: scheme.id %}
                                {% if forloop.index == 1 -%}
                                  :root,
                                {%- endif %}
                                .color-{{ scheme.id }} {
                                  --color-background: {{ scheme.settings.background.red }},{{ scheme.settings.background.green }},{{ scheme.settings.background.blue }};
                                {% if scheme.settings.background_gradient != empty %}
                                  --gradient-background: {{ scheme.settings.background_gradient }};
                                {% else %}
                                  --gradient-background: {{ scheme.settings.background }};
                                {% endif %}

                                {% liquid
                                  assign background_color = scheme.settings.background
                                  assign background_color_brightness = background_color | color_brightness
                                  if background_color_brightness <= 26
                                    assign background_color_contrast = background_color | color_lighten: 50
                                  elsif background_color_brightness <= 65
                                    assign background_color_contrast = background_color | color_lighten: 5
                                  else
                                    assign background_color_contrast = background_color | color_darken: 25
                                  endif
                                %}

                                --color-foreground: {{ scheme.settings.text.red }},{{ scheme.settings.text.green }},{{ scheme.settings.text.blue }};
                                --color-background-contrast: {{ background_color_contrast.red }},{{ background_color_contrast.green }},{{ background_color_contrast.blue }};
                                --color-shadow: {{ scheme.settings.shadow.red }},{{ scheme.settings.shadow.green }},{{ scheme.settings.shadow.blue }};
                                --color-button: {{ scheme.settings.button.red }},{{ scheme.settings.button.green }},{{ scheme.settings.button.blue }};
                                --color-button-text: {{ scheme.settings.button_label.red }},{{ scheme.settings.button_label.green }},{{ scheme.settings.button_label.blue }};
                                --color-secondary-button: {{ scheme.settings.background.red }},{{ scheme.settings.background.green }},{{ scheme.settings.background.blue }};
                                --color-secondary-button-text: {{ scheme.settings.secondary_button_label.red }},{{ scheme.settings.secondary_button_label.green }},{{ scheme.settings.secondary_button_label.blue }};
                                --color-link: {{ scheme.settings.secondary_button_label.red }},{{ scheme.settings.secondary_button_label.green }},{{ scheme.settings.secondary_button_label.blue }};
                                --color-badge-foreground: {{ scheme.settings.text.red }},{{ scheme.settings.text.green }},{{ scheme.settings.text.blue }};
                                --color-badge-background: {{ scheme.settings.background.red }},{{ scheme.settings.background.green }},{{ scheme.settings.background.blue }};
                                --color-badge-border: {{ scheme.settings.text.red }},{{ scheme.settings.text.green }},{{ scheme.settings.text.blue }};
                                --payment-terms-background-color: rgb({{ scheme.settings.background.rgb }});
                              }
                              {% endfor %}

                              {{ scheme_classes | prepend: 'body' }} {
                                color: rgba(var(--color-foreground), 0.75);
                                background-color: rgb(var(--color-background));
                              }

                              :root {
                                --font-body-family: {{ settings.type_body_font.family }}, {{ settings.type_body_font.fallback_families }};
                                --font-body-style: {{ settings.type_body_font.style }};
                                --font-body-weight: {{ settings.type_body_font.weight }};
                                --font-body-weight-bold: {{ settings.type_body_font.weight | plus: 300 | at_most: 1000 }};

                                --font-heading-family: {{ settings.type_header_font.family }}, {{ settings.type_header_font.fallback_families }};
                                --font-heading-style: {{ settings.type_header_font.style }};
                                --font-heading-weight: {{ settings.type_header_font.weight }};

                                --font-body-scale: {{ settings.body_scale | divided_by: 100.0 }};
                                --font-heading-scale: {{ settings.heading_scale | times: 1.0 | divided_by: settings.body_scale }};

                                --media-padding: {{ settings.media_padding }}px;
                                --media-border-opacity: {{ settings.media_border_opacity | divided_by: 100.0 }};
                                --media-border-width: {{ settings.media_border_thickness }}px;
                                --media-radius: {{ settings.media_radius }}px;
                                --media-shadow-opacity: {{ settings.media_shadow_opacity | divided_by: 100.0 }};
                                --media-shadow-horizontal-offset: {{ settings.media_shadow_horizontal_offset }}px;
                                --media-shadow-vertical-offset: {{ settings.media_shadow_vertical_offset }}px;
                                --media-shadow-blur-radius: {{ settings.media_shadow_blur }}px;
                                --media-shadow-visible: {% if settings.media_shadow_opacity > 0 %}1{% else %}0{% endif %};

                                --page-width: {{ settings.page_width | divided_by: 10 }}rem;
                                --page-width-margin: {% if settings.page_width == '1600' %}2{% else %}0{% endif %}rem;

                                --product-card-image-padding: {{ settings.card_image_padding | divided_by: 10.0 }}rem;
                                --product-card-corner-radius: {{ settings.card_corner_radius | divided_by: 10.0 }}rem;
                                --product-card-text-alignment: {{ settings.card_text_alignment }};
                                --product-card-border-width: {{ settings.card_border_thickness | divided_by: 10.0 }}rem;
                                --product-card-border-opacity: {{ settings.card_border_opacity | divided_by: 100.0 }};
                                --product-card-shadow-opacity: {{ settings.card_shadow_opacity | divided_by: 100.0 }};
                                --product-card-shadow-visible: {% if settings.card_shadow_opacity > 0 %}1{% else %}0{% endif %};
                                --product-card-shadow-horizontal-offset: {{ settings.card_shadow_horizontal_offset | divided_by: 10.0 }}rem;
                                --product-card-shadow-vertical-offset: {{ settings.card_shadow_vertical_offset | divided_by: 10.0 }}rem;
                                --product-card-shadow-blur-radius: {{ settings.card_shadow_blur | divided_by: 10.0 }}rem;

                                --collection-card-image-padding: {{ settings.collection_card_image_padding | divided_by: 10.0 }}rem;
                                --collection-card-corner-radius: {{ settings.collection_card_corner_radius | divided_by: 10.0 }}rem;
                                --collection-card-text-alignment: {{ settings.collection_card_text_alignment }};
                                --collection-card-border-width: {{ settings.collection_card_border_thickness | divided_by: 10.0 }}rem;
                                --collection-card-border-opacity: {{ settings.collection_card_border_opacity | divided_by: 100.0 }};
                                --collection-card-shadow-opacity: {{ settings.collection_card_shadow_opacity | divided_by: 100.0 }};
                                --collection-card-shadow-visible: {% if settings.collection_card_shadow_opacity > 0 %}1{% else %}0{% endif %};
                                --collection-card-shadow-horizontal-offset: {{ settings.collection_card_shadow_horizontal_offset | divided_by: 10.0 }}rem;
                                --collection-card-shadow-vertical-offset: {{ settings.collection_card_shadow_vertical_offset | divided_by: 10.0 }}rem;
                                --collection-card-shadow-blur-radius: {{ settings.collection_card_shadow_blur | divided_by: 10.0 }}rem;

                                --blog-card-image-padding: {{ settings.blog_card_image_padding | divided_by: 10.0 }}rem;
                                --blog-card-corner-radius: {{ settings.blog_card_corner_radius | divided_by: 10.0 }}rem;
                                --blog-card-text-alignment: {{ settings.blog_card_text_alignment }};
                                --blog-card-border-width: {{ settings.blog_card_border_thickness | divided_by: 10.0 }}rem;
                                --blog-card-border-opacity: {{ settings.blog_card_border_opacity | divided_by: 100.0 }};
                                --blog-card-shadow-opacity: {{ settings.blog_card_shadow_opacity | divided_by: 100.0 }};
                                --blog-card-shadow-visible: {% if settings.blog_card_shadow_opacity > 0 %}1{% else %}0{% endif %};
                                --blog-card-shadow-horizontal-offset: {{ settings.blog_card_shadow_horizontal_offset | divided_by: 10.0 }}rem;
                                --blog-card-shadow-vertical-offset: {{ settings.blog_card_shadow_vertical_offset | divided_by: 10.0 }}rem;
                                --blog-card-shadow-blur-radius: {{ settings.blog_card_shadow_blur | divided_by: 10.0 }}rem;

                                --badge-corner-radius: {{ settings.badge_corner_radius | divided_by: 10.0 }}rem;

                                --popup-border-width: {{ settings.popup_border_thickness }}px;
                                --popup-border-opacity: {{ settings.popup_border_opacity | divided_by: 100.0 }};
                                --popup-corner-radius: {{ settings.popup_corner_radius }}px;
                                --popup-shadow-opacity: {{ settings.popup_shadow_opacity | divided_by: 100.0 }};
                                --popup-shadow-horizontal-offset: {{ settings.popup_shadow_horizontal_offset }}px;
                                --popup-shadow-vertical-offset: {{ settings.popup_shadow_vertical_offset }}px;
                                --popup-shadow-blur-radius: {{ settings.popup_shadow_blur }}px;

                                --drawer-border-width: {{ settings.drawer_border_thickness }}px;
                                --drawer-border-opacity: {{ settings.drawer_border_opacity | divided_by: 100.0 }};
                                --drawer-shadow-opacity: {{ settings.drawer_shadow_opacity | divided_by: 100.0 }};
                                --drawer-shadow-horizontal-offset: {{ settings.drawer_shadow_horizontal_offset }}px;
                                --drawer-shadow-vertical-offset: {{ settings.drawer_shadow_vertical_offset }}px;
                                --drawer-shadow-blur-radius: {{ settings.drawer_shadow_blur }}px;

                                --spacing-sections-desktop: {{ settings.spacing_sections }}px;
                                --spacing-sections-mobile: {% if settings.spacing_sections < 24 %}{{ settings.spacing_sections }}{% else %}{{ settings.spacing_sections | times: 0.7 | round | at_least: 20 }}{% endif %}px;

                                --grid-desktop-vertical-spacing: {{ settings.spacing_grid_vertical }}px;
                                --grid-desktop-horizontal-spacing: {{ settings.spacing_grid_horizontal }}px;
                                --grid-mobile-vertical-spacing: {{ settings.spacing_grid_vertical | divided_by: 2 }}px;
                                --grid-mobile-horizontal-spacing: {{ settings.spacing_grid_horizontal | divided_by: 2 }}px;

                                --text-boxes-border-opacity: {{ settings.text_boxes_border_opacity | divided_by: 100.0 }};
                                --text-boxes-border-width: {{ settings.text_boxes_border_thickness }}px;
                                --text-boxes-radius: {{ settings.text_boxes_radius }}px;
                                --text-boxes-shadow-opacity: {{ settings.text_boxes_shadow_opacity | divided_by: 100.0 }};
                                --text-boxes-shadow-visible: {% if settings.text_boxes_shadow_opacity > 0 %}1{% else %}0{% endif %};
                                --text-boxes-shadow-horizontal-offset: {{ settings.text_boxes_shadow_horizontal_offset }}px;
                                --text-boxes-shadow-vertical-offset: {{ settings.text_boxes_shadow_vertical_offset }}px;
                                --text-boxes-shadow-blur-radius: {{ settings.text_boxes_shadow_blur }}px;

                                --buttons-radius: {{ settings.buttons_radius }}px;
                                --buttons-radius-outset: {% if settings.buttons_radius > 0 %}{{ settings.buttons_radius | plus: settings.buttons_border_thickness }}{% else %}0{% endif %}px;
                                --buttons-border-width: {% if settings.buttons_border_opacity > 0 %}{{ settings.buttons_border_thickness }}{% else %}0{% endif %}px;
                                --buttons-border-opacity: {{ settings.buttons_border_opacity | divided_by: 100.0 }};
                                --buttons-shadow-opacity: {{ settings.buttons_shadow_opacity | divided_by: 100.0 }};
                                --buttons-shadow-visible: {% if settings.buttons_shadow_opacity > 0 %}1{% else %}0{% endif %};
                                --buttons-shadow-horizontal-offset: {{ settings.buttons_shadow_horizontal_offset }}px;
                                --buttons-shadow-vertical-offset: {{ settings.buttons_shadow_vertical_offset }}px;
                                --buttons-shadow-blur-radius: {{ settings.buttons_shadow_blur }}px;
                                --buttons-border-offset: {% if settings.buttons_radius > 0 or settings.buttons_shadow_opacity > 0 %}0.3{% else %}0{% endif %}px;

                                --inputs-radius: {{ settings.inputs_radius }}px;
                                --inputs-border-width: {{ settings.inputs_border_thickness }}px;
                                --inputs-border-opacity: {{ settings.inputs_border_opacity | divided_by: 100.0 }};
                                --inputs-shadow-opacity: {{ settings.inputs_shadow_opacity | divided_by: 100.0 }};
                                --inputs-shadow-horizontal-offset: {{ settings.inputs_shadow_horizontal_offset }}px;
                                --inputs-margin-offset: {% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_opacity > 0 %}{{ settings.inputs_shadow_vertical_offset | abs }}{% else %}0{% endif %}px;
                                --inputs-shadow-vertical-offset: {{ settings.inputs_shadow_vertical_offset }}px;
                                --inputs-shadow-blur-radius: {{ settings.inputs_shadow_blur }}px;
                                --inputs-radius-outset: {% if settings.inputs_radius > 0 %}{{ settings.inputs_radius | plus: settings.inputs_border_thickness }}{% else %}0{% endif %}px;

                                --variant-pills-radius: {{ settings.variant_pills_radius }}px;
                                --variant-pills-border-width: {{ settings.variant_pills_border_thickness }}px;
                                --variant-pills-border-opacity: {{ settings.variant_pills_border_opacity | divided_by: 100.0 }};
                                --variant-pills-shadow-opacity: {{ settings.variant_pills_shadow_opacity | divided_by: 100.0 }};
                                --variant-pills-shadow-horizontal-offset: {{ settings.variant_pills_shadow_horizontal_offset }}px;
                                --variant-pills-shadow-vertical-offset: {{ settings.variant_pills_shadow_vertical_offset }}px;
                                --variant-pills-shadow-blur-radius: {{ settings.variant_pills_shadow_blur }}px;
                              }

                              *,
                              *::before,
                              *::after {
                                box-sizing: inherit;
                              }

                              html {
                                box-sizing: border-box;
                                font-size: calc(var(--font-body-scale) * 62.5%);
                                height: 100%;
                              }

                              body {
                                display: grid;
                                grid-template-rows: auto auto 1fr auto;
                                grid-template-columns: 100%;
                                min-height: 100%;
                                margin: 0;
                                font-size: 1.5rem;
                                letter-spacing: 0.06rem;
                                line-height: calc(1 + 0.8 / var(--font-body-scale));
                                font-family: var(--font-body-family);
                                font-style: var(--font-body-style);
                                font-weight: var(--font-body-weight);
                              }

                              @media screen and (min-width: 750px) {
                                body {
                                  font-size: 1.6rem;
                                }
                              }

                  .wishlist_button{
                  background: none;
                  border: none;
                  display: flex;
                  align-items: center;
                  }
                    .prod_wishlist_button{
                      opacity: 1;
                  position: absolute;
                  right: 0%;
                  top: 0;
                  cursor: pointer;
                  transition: all .5s ease;
                  }
                  .prodImage:hover .prod_wishlist_button{
                   opacity: 1;
                  }

            .wishlist_button svg{
            margin: 10px 0;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            padding: 5px;
            }

            .heart-filled path{
            fill: red;
            }


            .button-floating{
            position: relative;
            z-index: 1;
            padding: 8px;
            display: inline-flex;
            align-items: center;
            text-decoration: none;
            color: #000;
            border-radius: 6px 0 0 6px;
            transition: all 1s ease;
            }
            .wishlist_text{
            margin-left: 7px !important;;
            margin: 0px;
            text-decoration: none;
            }
            .wishListCount{
            position: absolute;
            background-color: rgb(var(--color-button));
            color: rgb(var(--color-button-text));
            height: 1.7rem;
            width: 1.7rem;
            border-radius: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: .9rem;
            bottom: .8rem;
            left: 2.2rem;
            }

      shopify-accelerated-checkout {
        --shopify-accelerated-checkout-button-block-size: 44px;
        --shopify-accelerated-checkout-button-border-radius: 0px;
        --shopify-accelerated-checkout-button-box-shadow: none;
        --shopify-accelerated-checkout-skeleton-background-color: #dedede;
        --shopify-accelerated-checkout-skeleton-animation-opacity-start: 1;
        --shopify-accelerated-checkout-skeleton-animation-opacity-end: 0.5;
        --shopify-accelerated-checkout-skeleton-animation-duration: 4s;
        --shopify-accelerated-checkout-skeleton-animation-timing-function: ease;
      }

      shopify-accelerated-checkout-cart {
        --shopify-accelerated-checkout-button-block-size: 42px;
        --shopify-accelerated-checkout-button-inline-size: 54px;
        --shopify-accelerated-checkout-button-border-radius: 4px;
        --shopify-accelerated-checkout-button-box-shadow: none;
        --shopify-accelerated-checkout-inline-alignment: flex-start;
        --shopify-accelerated-checkout-row-gap: 8px;
        --shopify-accelerated-checkout-skeleton-background-color: #dedede;
        --shopify-accelerated-checkout-skeleton-animation-opacity-start: 1;
        --shopify-accelerated-checkout-skeleton-animation-opacity-end: 0.5;
        --shopify-accelerated-checkout-skeleton-animation-duration: 4s;
        --shopify-accelerated-checkout-skeleton-animation-timing-function: ease;
      }
    {% endstyle %}

    {{ 'base.css' | asset_url | stylesheet_tag }}
    <link rel="stylesheet" href="{{ 'component-cart-items.css' | asset_url }}" media="print" onload="this.media='all'">

    <!-- <link href="{{ 'output.css' | asset_url }}" rel="stylesheet"> -->
    <!-- <script src="https://cdn.tailwindcss.com"></script> -->
    {{ 'slick.min.css' | asset_url | stylesheet_tag }}
    {{ 'slick-theme.min.css' | asset_url | stylesheet_tag }}
    {{ 'owl.carousel.min.css' | asset_url | stylesheet_tag }}
    {{ 'owl.theme.default.min.css' | asset_url | stylesheet_tag }}
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="{{ 'slick.min.js' | asset_url }}" defer></script>
    <script src="{{ 'owl.carousel.min.js' | asset_url }}" defer></script>
    {%- if settings.cart_type == 'drawer' -%}
      {{ 'component-cart-drawer.css' | asset_url | stylesheet_tag }}
      {{ 'component-cart.css' | asset_url | stylesheet_tag }}
      {{ 'component-totals.css' | asset_url | stylesheet_tag }}
      {{ 'component-price.css' | asset_url | stylesheet_tag }}
      {{ 'component-discounts.css' | asset_url | stylesheet_tag }}
    {%- endif -%}

    {%- unless settings.type_body_font.system? -%}
      {% comment %}theme-check-disable AssetPreload{% endcomment %}
      <link rel="preload" as="font" href="{{ settings.type_body_font | font_url }}" type="font/woff2" crossorigin>
      {% comment %}theme-check-enable AssetPreload{% endcomment %}
    {%- endunless -%}
    {%- unless settings.type_header_font.system? -%}
      {% comment %}theme-check-disable AssetPreload{% endcomment %}
      <link rel="preload" as="font" href="{{ settings.type_header_font | font_url }}" type="font/woff2" crossorigin>
      {% comment %}theme-check-enable AssetPreload{% endcomment %}
    {%- endunless -%}

    {%- if localization.available_countries.size > 1 or localization.available_languages.size > 1 -%}
      {{ 'component-localization-form.css' | asset_url | stylesheet_tag: preload: true }}
      <script src="{{ 'localization-form.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    {%- if settings.predictive_search_enabled -%}
      <link
        rel="stylesheet"
        href="{{ 'component-predictive-search.css' | asset_url }}"
        media="print"
        onload="this.media='all'"
      >
    {%- endif -%}

    <script>
      if (Shopify.designMode) {
        document.documentElement.classList.add('shopify-design-mode');
      }
    </script>
    <!-- Google tag (gtag.js) -->

    <script async src="https://www.googletagmanager.com/gtag/js?id=G-RM38VCE825"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'G-RM38VCE825');
    </script>
    <!-- Microsoft clarity -->
    <script type="text/javascript">
      (function(c,l,a,r,i,t,y){
          c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
          t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
          y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
      })(window, document, "clarity", "script", "nr5fuewnh8");
    </script>
    <!-- Google Tag Manager -->
    <script>
      (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
      new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
      'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
      })(window,document,'script','dataLayer','GTM-MPS9F7XS');
    </script>
    <!-- End Google Tag Manager -->
    <!-- Meta Pixel Code -->
    <script>
            !function(f,b,e,v,n,t,s)
            {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
            n.callMethod.apply(n,arguments):n.queue.push(arguments)};
            if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
            n.queue=[];t=b.createElement(e);t.async=!0;
            t.src=v;s=b.getElementsByTagName(e)[0];
            s.parentNode.insertBefore(t,s)}(window, document,'script',
            'https://connect.facebook.net/en_US/fbevents.js');
            fbq('init', '521968940353790');
            fbq('track', 'PageView');
      //       fbq('track', 'Purchase', {
      //   content_ids: ['123'], // 'REQUIRED': array of product IDs
      //   value: 1234.99, // REQUIRED, up to 2 decimals optional
      //   currency: 'USD', // REQUIRED
      //   content_type: 'product', // RECOMMENDED: Either product or product_group based on the content_ids or contents being passed.
      // });
    </script>
    <noscript
      ><img
        height="1"
        width="1"
        style="display:none"
        src="https://www.facebook.com/tr?id=521968940353790&ev=PageView&noscript=1"
    ></noscript>
    <!-- End Meta Pixel Code -->
    <script
      src="https://cdn.jsdelivr.net/npm/@loglib/tracker@latest/dist/index.global.js"
      data-id="techydeepakmyshopify"
    ></script>
  </head>

  <body class="gradient{% if settings.animations_hover_elements != 'none' %} animate--hover-{{ settings.animations_hover_elements }}{% endif %}">
    <!-- Google Tag Manager (noscript) -->
    <noscript
      ><iframe
        src="https://www.googletagmanager.com/ns.html?id=GTM-MPS9F7XS"
        height="0"
        width="0"
        style="display:none;visibility:hidden"
      ></iframe
    ></noscript>
    <!-- End Google Tag Manager (noscript) -->
    <a class="skip-to-content-link button visually-hidden" href="#MainContent">
      {{ 'accessibility.skip_to_text' | t }}
    </a>

    {%- if settings.cart_type == 'drawer' -%}
      {%- render 'cart-drawer' -%}
    {%- endif -%}

    {% sections 'header-group' %}

    <main id="MainContent" class="content-for-layout focus-none" role="main" tabindex="-1">
      {{ content_for_layout }}
    </main>

    {% sections 'footer-group' %}

    <ul hidden>
      <li id="a11y-refresh-page-message">{{ 'accessibility.refresh_page' | t }}</li>
      <li id="a11y-new-window-message">{{ 'accessibility.link_messages.new_window' | t }}</li>
    </ul>

    <script>
      window.shopUrl = '{{ request.origin }}';
      window.routes = {
        cart_add_url: '{{ routes.cart_add_url }}',
        cart_change_url: '{{ routes.cart_change_url }}',
        cart_update_url: '{{ routes.cart_update_url }}',
        cart_url: '{{ routes.cart_url }}',
        predictive_search_url: '{{ routes.predictive_search_url }}',
      };

      window.cartStrings = {
        error: `{{ 'sections.cart.cart_error' | t }}`,
        quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`,
      };

      window.variantStrings = {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
        unavailable_with_option: `{{ 'products.product.value_unavailable' | t: option_value: '[value]' }}`,
      };

      window.quickOrderListStrings = {
        itemsAdded: `{{ 'sections.quick_order_list.items_added.other' | t: quantity: '[quantity]' }}`,
        itemAdded: `{{ 'sections.quick_order_list.items_added.one' | t: quantity: '[quantity]' }}`,
        itemsRemoved: `{{ 'sections.quick_order_list.items_removed.other' | t: quantity: '[quantity]' }}`,
        itemRemoved: `{{ 'sections.quick_order_list.items_removed.one' | t: quantity: '[quantity]' }}`,
        viewCart: `{{- 'sections.quick_order_list.view_cart' | t -}}`,
        each: `{{- 'sections.quick_order_list.each' | t: money: '[money]' }}`,
        min_error: `{{- 'sections.quick_order_list.min_error' | t: min: '[min]' }}`,
        max_error: `{{- 'sections.quick_order_list.max_error' | t: max: '[max]' }}`,
        step_error: `{{- 'sections.quick_order_list.step_error' | t: step: '[step]' }}`,
      };

      window.accessibilityStrings = {
        imageAvailable: `{{ 'products.product.media.image_available' | t: index: '[index]' }}`,
        shareSuccess: `{{ 'general.share.success_message' | t }}`,
        pauseSlideshow: `{{ 'sections.slideshow.pause_slideshow' | t }}`,
        playSlideshow: `{{ 'sections.slideshow.play_slideshow' | t }}`,
        recipientFormExpanded: `{{ 'recipient.form.expanded' | t }}`,
        recipientFormCollapsed: `{{ 'recipient.form.collapsed' | t }}`,
        countrySelectorSearchCount: `{{ 'localization.country_results_count' | t: count: '[count]' }}`,
      };
    </script>

    {%- if settings.predictive_search_enabled -%}
      <script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    {%- if settings.cart_type == 'drawer' -%}
      <script src="{{ 'cart-drawer.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    <!-- Button Click Tracking Script -->
    <script>
      document.addEventListener('DOMContentLoaded', function() {
          document.querySelectorAll('.button').forEach(function(button) {
              button.addEventListener('click', function() {
                  fbq('track', 'ButtonClick', {
                      buttonText: this.textContent || this.innerText
                  });
              });
          });
      });
    </script>
    <script>
      //   const wishlistKey = "wishlist";

// function getWishlist() {
//   return JSON.parse(localStorage.getItem(wishlistKey)) || [];
// }

// function saveWishlist(wishlist) {
//   localStorage.setItem(wishlistKey, JSON.stringify(wishlist));
// }

// function toggleWishlist() {
//   const wishlistData = getWishlist();
//   const isAlreadyInWishlist = wishlistData.some(
//     (item) => item.productTitle === pdpData.productTitle
//   );

//   const updatedWishlist = isAlreadyInWishlist
//     ? wishlistData.filter((item) => item.productTitle !== pdpData.productTitle)
//     : [...wishlistData, pdpData];

//   saveWishlist(updatedWishlist);
//   updateWishlistButton(isAlreadyInWishlist ? "remove" : "add");
//   displayWishlist();
// }

// function updateWishlistButton(action) {
//   const wishlistButton = document.querySelector(".wishlist_button");
//   if (!wishlistButton) return;

//   const heartIcon =
//     action === "add"
//       ? `<svg class="heart-filled" width="35px" height="35px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M19.3 5.71002C18.841 5.24601 18.2943 4.87797 17.6917 4.62731C17.0891 4.37666 16.4426 4.2484 15.79 4.25002C15.1373 4.2484 14.4909 4.37666 13.8883 4.62731C13.2857 4.87797 12.739 5.24601 12.28 5.71002L12 6.00002L11.72 5.72001C10.7917 4.79182 9.53273 4.27037 8.22 4.27037C6.90726 4.27037 5.64829 4.79182 4.72 5.72001C3.80386 6.65466 3.29071 7.91125 3.29071 9.22002C3.29071 10.5288 3.80386 11.7854 4.72 12.72L11.49 19.51C11.6306 19.6505 11.8212 19.7294 12.02 19.7294C12.2187 19.7294 12.4094 19.6505 12.55 19.51L19.32 12.72C20.2365 11.7823 20.7479 10.5221 20.7442 9.21092C20.7405 7.89973 20.2218 6.64248 19.3 5.71002Z" fill="#000000"/></svg>`
//       : `<svg class="heart-outline" width="35px" height="35px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><rect x="0" fill="none" width="24" height="24"/><g><path d="M16.5 4.5c2.206 0 4 1.794 4 4 0 4.67-5.543 8.94-8.5 11.023C9.043 17.44 3.5 13.17 3.5 8.5c0-2.206 1.794-4 4-4 1.298 0 2.522.638 3.273 1.706L12 7.953l1.227-1.746c.75-1.07 1.975-1.707 3.273-1.707m0-1.5c-1.862 0-3.505.928-4.5 2.344C11.005 3.928 9.362 3 7.5 3 4.462 3 2 5.462 2 8.5c0 5.72 6.5 10.438 10 12.85 3.5-2.412 10-7.13 10-12.85C22 5.462 19.538 3 16.5 3z"/></g></svg>`;

//   wishlistButton.innerHTML = heartIcon;
// }

// function displayWishlist() {
//   const wishlistData = getWishlist();
//   const wishListCount = document.querySelector(".button-floating .wishCount");
//   const wishlistBlock = document.querySelector(".js-wishlistBlock");

//   if (!wishListCount) return;

//   wishListCount.classList.toggle("wishListCount", wishlistData.length > 0);
//   wishListCount.textContent = wishlistData.length || "";

//   const wishlistHtml = wishlistData.length
//     ? wishlistData.map(createWishlistItem).join("")
//     : "<p>Your wishlist is empty.</p>";

//   if (wishlistBlock) {
//     wishlistBlock.innerHTML = wishlistHtml;
//   }
// }

// function createWishlistItem(item) {
//   return `
// <div class="wishlist-product__list">
// <div class="c-product">
// <a href="${item.productUrl}">
// <img class="pdpimage" src="${item.productImg}" alt="${item.productTitle}">
// </a>
// <button class="removebutton" onclick="removeFromWishlist('${item.productTitle}')">
// <svg xmlns="http://www.w3.org/2000/svg" id="Layer_1" data-name="Layer 1" viewBox="0 0 122.88 107.21" width="20px" height="20px" fill="#f73838"><title>Remove from wishlist</title><path d="M73.13,93.77,59.58,107.21,44,92.19c-2.43-2.35-5.25-4.92-8.18-7.59C19.93,70.14.79,52.69,0,31.09l0-1.65A28.51,28.51,0,0,1,9,8.54,31.68,31.68,0,0,1,29.57.31l1.71,0c13.72.18,20,6.2,28.18,14.24C66.21,7.38,71.81,1.52,83.21.21a33.07,33.07,0,0,1,18.62,3.37,34.41,34.41,0,0,1,12.24,10.25,31,31,0,0,1,6,14.86A30.55,30.55,0,0,1,116.82,46c-.41.8-.88,1.65-1.39,2.52l-.45.74A30.65,30.65,0,0,1,73.13,93.77Zm30.73-27.85a3.87,3.87,0,0,1,1.48.29,3.92,3.92,0,0,1,1.26.84,4,4,0,0,1,.84,1.25l0,.07a3.78,3.78,0,0,1,.28,1.35v.15a3.86,3.86,0,0,1-.29,1.41,4.15,4.15,0,0,1-.84,1.26,3.7,3.7,0,0,1-1.25.83l-.07,0a4,4,0,0,1-1.39.28H80.6a3.87,3.87,0,0,1-1.48-.3l-.06,0a3.58,3.58,0,0,1-1.2-.81A3.87,3.87,0,0,1,77,71.3l0-.07a4,4,0,0,1-.28-1.4v0A4,4,0,0,1,77,68.33a3.86,3.86,0,0,1,.84-1.27,4,4,0,0,1,1.25-.83,3.71,3.71,0,0,1,1.47-.3Zm6.19-21.06c.34-.58.67-1.17,1-1.76a24.13,24.13,0,0,0,2.56-13.67,24.39,24.39,0,0,0-4.72-11.73,27.78,27.78,0,0,0-9.92-8.31A26.62,26.62,0,0,0,84,6.68c-9.13,1-14,6.2-19.9,12.47l-4.43,4.64L55.2,19.45c-7.27-7.14-12.74-12.52-24-12.67l-1.4,0a25.21,25.21,0,0,0-16.36,6.5A22.12,22.12,0,0,0,6.49,29.52l0,1.34c.67,18.85,18.72,35.3,33.67,48.93,2.89,2.63,5.67,5.16,8.32,7.72l11,10.61,9-8.91a30.66,30.66,0,0,1,41.55-44.35Zm-.76,7.87a24.14,24.14,0,1,0,7.07,17.07,24.06,24.06,0,0,0-7.07-17.07Z"></path></svg>
// </button>
// <h3 class="c-product__title card__heading h5">
// <a class="full-unstyled-link" href="${item.productUrl}">${item.productTitle}</a>
// </h3>
// <p>${item.productPrice}</p>
// </div>
// </div>`;
// }

// function removeFromWishlist(productTitle) {
//   const wishlistData = getWishlist();
//   const updatedWishlist = wishlistData.filter(
//     (item) => item.productTitle !== productTitle
//   );
//   saveWishlist(updatedWishlist);
//   displayWishlist();
//   updateWishlistButton("remove");
// }

// document.addEventListener("DOMContentLoaded", function () {
//   const wishlistData = getWishlist();
//   const wishlistButton = document.querySelector(".wishlist_button");
//   if (wishlistButton) {
//     const isAlreadyInWishlist = wishlistData.some(
//       (item) => item.productTitle === pdpData.productTitle
//     );
//     updateWishlistButton(isAlreadyInWishlist ? "add" : "remove");
//     wishlistButton.addEventListener("click", () => {
//       wishlistButton.innerHTML = `<div class="loading__spinner" style="width: 2.5rem"><svg aria-hidden="true" focusable="false" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg"><circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle></svg></div>`;
//       wishlistButton.disabled = true;
//       setTimeout(() => {
//         wishlistButton.innerHTML = "";
//         toggleWishlist();
//         wishlistButton.disabled = false;
//       }, 1000);
//     });
//   }

//   displayWishlist();
// });
    </script>
    <script>
      // Utility to fetch wishlist from localStorage
function getWishlist() {
  return JSON.parse(localStorage.getItem("wishlist")) || [];
}
function getButton() {
  return JSON.parse(localStorage.getItem("buttonData")) || [];
}
function getProduct() {
return JSON.parse(localStorage.getItem("productData")) || [];
}
// Utility to save wishlist, button and prodcut data to localStorage
function saveWishlist(wishlist) {
  localStorage.setItem("wishlist", JSON.stringify(wishlist));
}
function saveButton(buttonData) {
  localStorage.setItem("buttonData", JSON.stringify(buttonData));
}     
function saveProduct(productData) {
  localStorage.setItem("productData", JSON.stringify(productData));
}

// Toggle Wishlist for a specific product
function toggleWishlist(productData, wishlistButton) {
  const wishlistData = getWishlist();
  const isAlreadyInWishlist = wishlistData.some(
    (item) => item.productTitle === productData.productTitle
  );
  const updatedWishlist = isAlreadyInWishlist
    ? wishlistData.filter((item) => item.productTitle !== productData.productTitle)
    : [...wishlistData, productData];
  saveWishlist(updatedWishlist);
  updateWishlistButton(wishlistButton, isAlreadyInWishlist ? "add" : "remove");
  displayWishlist();

  const buttonData = getButton();
  const myproductData = getProduct();
  const updatedButton = isAlreadyInWishlist ? buttonData.filter((item) => item.productTitle !== productData.productTitle) : [...buttonData, productData];
  const updatedProduct = isAlreadyInWishlist ? myproductData.filter((item) => item.productTitle !== productData.productTitle) : [...myproductData, productData];
  saveButton(updatedButton);
  saveProduct(updatedProduct);
}

// Update the wishlist button (heart icon)
function updateWishlistButton(wishlistButton, action) {
  const heartIcon =
    action === "add"
      ? `<svg class="heart-filled" width="35px" height="35px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M19.3 5.71002C18.841 5.24601 18.2943 4.87797 17.6917 4.62731C17.0891 4.37666 16.4426 4.2484 15.79 4.25002C15.1373 4.2484 14.4909 4.37666 13.8883 4.62731C13.2857 4.87797 12.739 5.24601 12.28 5.71002L12 6.00002L11.72 5.72001C10.7917 4.79182 9.53273 4.27037 8.22 4.27037C6.90726 4.27037 5.64829 4.79182 4.72 5.72001C3.80386 6.65466 3.29071 7.91125 3.29071 9.22002C3.29071 10.5288 3.80386 11.7854 4.72 12.72L11.49 19.51C11.6306 19.6505 11.8212 19.7294 12.02 19.7294C12.2187 19.7294 12.4094 19.6505 12.55 19.51L19.32 12.72C20.2365 11.7823 20.7479 10.5221 20.7442 9.21092C20.7405 7.89973 20.2218 6.64248 19.3 5.71002Z" fill="#000000"/></svg>`
      : `<svg class="heart-outline" width="35px" height="35px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><rect x="0" fill="none" width="24" height="24"/><g><path d="M16.5 4.5c2.206 0 4 1.794 4 4 0 4.67-5.543 8.94-8.5 11.023C9.043 17.44 3.5 13.17 3.5 8.5c0-2.206 1.794-4 4-4 1.298 0 2.522.638 3.273 1.706L12 7.953l1.227-1.746c.75-1.07 1.975-1.707 3.273-1.707m0-1.5c-1.862 0-3.505.928-4.5 2.344C11.005 3.928 9.362 3 7.5 3 4.462 3 2 5.462 2 8.5c0 5.72 6.5 10.438 10 12.85 3.5-2.412 10-7.13 10-12.85C22 5.462 19.538 3 16.5 3z"/></g></svg>`;
  if(wishlistButton){ 
    wishlistButton.innerHTML = heartIcon;
  }
}

// Display the updated wishlist
function displayWishlist() {
  const wishlistData = getWishlist();
  const wishListCount = document.querySelector(".button-floating .wishCount");
  const wishlistBlock = document.querySelector(".js-wishlistBlock");
  if (!wishListCount) return;
  wishListCount.classList.toggle("wishListCount", wishlistData.length > 0);
  wishListCount.textContent = wishlistData.length || "";

  const wishlistHtml = wishlistData.length
    ? wishlistData.map(createWishlistItem).join("")
    : "<p>Your wishlist is empty.</p>";

  if (wishlistBlock) {
    wishlistBlock.innerHTML = wishlistHtml;
  }
  // Update wishlist buttons based on the current wishlist
  updateWishlistButtons();
}

// Update the state of each wishlist button on page load
  function updateWishlistButtons() {
  const wishlistData = getWishlist();
  
  // Iterate over each wishlist button
  document.querySelectorAll(".wishlist_button").forEach((button) => {
    let productTitle = button.getAttribute('data-prodtitle') || '{{ product.title }}' || localStorage.getItem('productTitle').productTitle;
    let mybtn = button;
    // If the product title is not directly from the button, check local storage
    if (!productTitle) {
      const storedButtons = JSON.parse(localStorage.getItem('buttonData').buttonHTML) || [];
      mybtn = storedButtons;
    }
    // Check if the product is in the wishlist
    const isInWishlist = wishlistData.some((item) => item.productTitle === productTitle);
    updateWishlistButton(mybtn, isInWishlist ? "add" : "remove");
  });    
}

function removeFromWishlist(productTitle) {
  const wishlistData = getWishlist();
  const updatedWishlist = wishlistData.filter(
    (item) => item.productTitle !== productTitle
  );
  saveWishlist(updatedWishlist);
  displayWishlist();
}

// Create a wishlist item (HTML) for display
function createWishlistItem(item) {
  return `
<div class="wishlist-product__list">
  <div class="c-product">
    <a href="${item.productUrl}">
      <img class="pdpimage" src="${item.productImg}" alt="${item.productTitle}">
    </a>
    <button class="removebutton" onclick="removeFromWishlist('${item.productTitle}')">
      <svg xmlns="http://www.w3.org/2000/svg" id="Layer_1" data-name="Layer 1" viewBox="0 0 122.88 107.21" width="20px" height="20px" fill="#f73838"><title>Remove from wishlist</title><path d="M73.13,93.77,59.58,107.21,44,92.19c-2.43-2.35-5.25-4.92-8.18-7.59C19.93,70.14.79,52.69,0,31.09l0-1.65A28.51,28.51,0,0,1,9,8.54,31.68,31.68,0,0,1,29.57.31l1.71,0c13.72.18,20,6.2,28.18,14.24C66.21,7.38,71.81,1.52,83.21.21a33.07,33.07,0,0,1,18.62,3.37,34.41,34.41,0,0,1,12.24,10.25,31,31,0,0,1,6,14.86A30.55,30.55,0,0,1,116.82,46c-.41.8-.88,1.65-1.39,2.52l-.45.74A30.65,30.65,0,0,1,73.13,93.77Zm30.73-27.85a3.87,3.87,0,0,1,1.48.29,3.92,3.92,0,0,1,1.26.84,4,4,0,0,1,.84,1.25l0,.07a3.78,3.78,0,0,1,.28,1.35v.15a3.86,3.86,0,0,1-.29,1.41,4.15,4.15,0,0,1-.84,1.26,3.7,3.7,0,0,1-1.25.83l-.07,0a4,4,0,0,1-1.39.28H80.6a3.87,3.87,0,0,1-1.48-.3l-.06,0a3.58,3.58,0,0,1-1.2-.81A3.87,3.87,0,0,1,77,71.3l0-.07a4,4,0,0,1-.28-1.4v0A4,4,0,0,1,77,68.33a3.86,3.86,0,0,1,.84-1.27,4,4,0,0,1,1.25-.83,3.71,3.71,0,0,1,1.47-.3Zm6.19-21.06c.34-.58.67-1.17,1-1.76a24.13,24.13,0,0,0,2.56-13.67,24.39,24.39,0,0,0-4.72-11.73,27.78,27.78,0,0,0-9.92-8.31A26.62,26.62,0,0,0,84,6.68c-9.13,1-14,6.2-19.9,12.47l-4.43,4.64L55.2,19.45c-7.27-7.14-12.74-12.52-24-12.67l-1.4,0a25.21,25.21,0,0,0-16.36,6.5A22.12,22.12,0,0,0,6.49,29.52l0,1.34c.67,18.85,18.72,35.3,33.67,48.93,2.89,2.63,5.67,5.16,8.32,7.72l11,10.61,9-8.91a30.66,30.66,0,0,1,41.55-44.35Zm-.76,7.87a24.14,24.14,0,1,0,7.07,17.07,24.06,24.06,0,0,0-7.07-17.07Z"></path></svg>
    </button>
  </div>
  <div class="wishlist-text">
    <a href="${item.productUrl}">${item.productTitle}</a>
  </div>
</div>`;
}

// Initialize wishlist functionality on page load
document.addEventListener("DOMContentLoaded", () => { 
  const intervalID = setInterval(()=>{
  displayWishlist();
  },2000);

  setTimeout(()=>{
    clearInterval(intervalID);
  }, 5000);

document.body.addEventListener('click', function(event) {
  // console.log(event.target);
  const button = event.target.closest('.wishlist_button');
  if (button) {
    const productData = {
      productId: button.getAttribute('data-prodId'),
      productTitle: button.getAttribute('data-prodtitle'),
      productImg: button.getAttribute('data-prodimg'),
      productPrice: button.getAttribute('data-prodprice'),
      productUrl: button.getAttribute('data-produrl')
    };
    // console.log(productData.productId, 'productData.productId');
    let storedProductData = JSON.parse(localStorage.getItem('productData')) || [];
    // Check if productId already exists
    const isProductStored = storedProductData.some(product => product.productId === productData.productId);
    if (!isProductStored) {
      storedProductData.push(productData);
      localStorage.setItem('productData', JSON.stringify(storedProductData));
    }

    let storedButtons = JSON.parse(localStorage.getItem('buttonData')) || [];
    const isButtonStored = storedButtons.some(storedButton => storedButton.productId === productData.productId);
    if (!isButtonStored) {
      const buttonData = {
        productId: productData.productId,
        buttonHTML: button.outerHTML
      };
      storedButtons.push(buttonData);
      localStorage.setItem('buttonData', JSON.stringify(storedButtons));
    }
    toggleWishlist(productData, button);
  } 
});

});
    </script>
  </body>
</html>
